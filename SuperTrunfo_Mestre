// Desafio Super Trunfo - Países - Nível Mestre
// Autor: Beatriz Cardoso
// Objetivo: Comparar duas cartas usando múltiplos atributos e operadores ternários

#include <stdio.h>
#include <string.h>

// Estrutura de uma carta
struct Carta {
    char estado[30];
    char codigo[10];
    char cidade[50];
    int populacao;
    float area;
    float pib;
    int pontos_turisticos;
};

void limparBuffer() {
    int c;
    while ((c = getchar()) != '\n' && c != EOF);
}

int main() {
    struct Carta c1, c2;
    int op1, op2;

    // Cadastro da primeira carta
    printf("Cadastro da primeira carta:\n");
    printf("Estado (ex: SP): "); fgets(c1.estado, sizeof(c1.estado), stdin); c1.estado[strcspn(c1.estado, "\n")] = '\0';
    printf("Código da carta: "); fgets(c1.codigo, sizeof(c1.codigo), stdin); c1.codigo[strcspn(c1.codigo, "\n")] = '\0';
    printf("Cidade: "); fgets(c1.cidade, sizeof(c1.cidade), stdin); c1.cidade[strcspn(c1.cidade, "\n")] = '\0';
    printf("População: "); scanf("%d", &c1.populacao);
    printf("Área (km2): "); scanf("%f", &c1.area);
    printf("PIB (em bilhões): "); scanf("%f", &c1.pib);
    printf("Nº de pontos turísticos: "); scanf("%d", &c1.pontos_turisticos);
    limparBuffer();

    // Cadastro da segunda carta
    printf("\nCadastro da segunda carta:\n");
    printf("Estado (ex: RJ): "); fgets(c2.estado, sizeof(c2.estado), stdin); c2.estado[strcspn(c2.estado, "\n")] = '\0';
    printf("Código da carta: "); fgets(c2.codigo, sizeof(c2.codigo), stdin); c2.codigo[strcspn(c2.codigo, "\n")] = '\0';
    printf("Cidade: "); fgets(c2.cidade, sizeof(c2.cidade), stdin); c2.cidade[strcspn(c2.cidade, "\n")] = '\0';
    printf("População: "); scanf("%d", &c2.populacao);
    printf("Área (km2): "); scanf("%f", &c2.area);
    printf("PIB (em bilhões): "); scanf("%f", &c2.pib);
    printf("Nº de pontos turísticos: "); scanf("%d", &c2.pontos_turisticos);

    // Menu
    printf("\nEscolha dois atributos para comparação:\n");
    printf("1 - População\n2 - Área\n3 - PIB\n4 - Pontos Turísticos\n");
    printf("Opção 1: "); scanf("%d", &op1);
    printf("Opção 2: "); scanf("%d", &op2);

    int score1 = 0, score2 = 0;

    // Comparações com operadores ternários
    switch(op1) {
        case 1: (c1.populacao > c2.populacao) ? score1++ : (c2.populacao > c1.populacao ? score2++ : 0); break;
        case 2: (c1.area > c2.area) ? score1++ : (c2.area > c1.area ? score2++ : 0); break;
        case 3: (c1.pib > c2.pib) ? score1++ : (c2.pib > c1.pib ? score2++ : 0); break;
        case 4: (c1.pontos_turisticos > c2.pontos_turisticos) ? score1++ : (c2.pontos_turisticos > c1.pontos_turisticos ? score2++ : 0); break;
        default: printf("\nOpção 1 inválida.\n");
    }

    switch(op2) {
        case 1: (c1.populacao > c2.populacao) ? score1++ : (c2.populacao > c1.populacao ? score2++ : 0); break;
        case 2: (c1.area > c2.area) ? score1++ : (c2.area > c1.area ? score2++ : 0); break;
        case 3: (c1.pib > c2.pib) ? score1++ : (c2.pib > c1.pib ? score2++ : 0); break;
        case 4: (c1.pontos_turisticos > c2.pontos_turisticos) ? score1++ : (c2.pontos_turisticos > c1.pontos_turisticos ? score2++ : 0); break;
        default: printf("\nOpção 2 inválida.\n");
    }

    // Resultado final
    printf("\nResultado Final:\n");
    if (score1 > score2) {
        printf("Vencedora: %s (%s)\n", c1.cidade, c1.codigo);
    } else if (score2 > score1) {
        printf("Vencedora: %s (%s)\n", c2.cidade, c2.codigo);
    } else {
        printf("Empate entre %s e %s!\n", c1.cidade, c2.cidade);
    }

    return 0;
}
